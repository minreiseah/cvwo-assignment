// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: statistics.sql

package db

import (
	"context"
)

const getStatistics = `-- name: GetStatistics :one
SELECT 
    (SELECT COUNT(*) FROM threads) as "thread_count",
    (SELECT COUNT(*) FROM posts) as "message_count",
    (SELECT COUNT(*) FROM users) as "user_count",
    (SELECT name FROM users ORDER BY created_at DESC LIMIT 1) as "newest_user"
`

type GetStatisticsRow struct {
	ThreadCount  int64  `json:"thread_count"`
	MessageCount int64  `json:"message_count"`
	UserCount    int64  `json:"user_count"`
	NewestUser   string `json:"newest_user"`
}

func (q *Queries) GetStatistics(ctx context.Context) (GetStatisticsRow, error) {
	row := q.db.QueryRowContext(ctx, getStatistics)
	var i GetStatisticsRow
	err := row.Scan(
		&i.ThreadCount,
		&i.MessageCount,
		&i.UserCount,
		&i.NewestUser,
	)
	return i, err
}
